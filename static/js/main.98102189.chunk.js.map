{"version":3,"sources":["reducers/itemReducer.js","components/ItemForm.js","components/ItemList.js","App.js","index.js"],"names":["itemReducer","state","action","console","log","type","id","data","itemToToggle","find","item","changedItem","clicked","map","removeId","removedItemList","filter","ItemForm","props","dispatch","useDispatch","useState","warning","setWarning","handleClose","event","reason","setOpen","className","onSubmit","preventDefault","target","value","content","Math","random","createItem","Typography","gutterBottom","Tooltip","title","name","Button","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","Alert","severity","AlertTitle","ItemList","remove","setRemove","items","useSelector","length","key","Chip","variant","style","borderColor","label","icon","onClick","toggleClicked","onDelete","removeItem","App","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.98102189.chunk.js","sourcesContent":["/* eslint-disable no-case-declarations */\n\nexport const createItem=(content)=>{\n\tlet id=Math.random()*999;\n\treturn{\n\t\ttype:'NEW_ITEM',\n\t\tdata:{\n\t\t\tcontent,\n\t\t\tid:id,\n\t\t\tclicked:false\n\t\t}\n\t};\n};\nexport const toggleClicked=(id)=>{\n\treturn{\n\t\ttype:'TOGGLE_CLICKED',\n\t\tdata:{id}\n\t};\n\n};\nexport const removeItem=id=>{\n\treturn{\n\t\ttype:'REMOVE_ITEM',\n\t\tdata:{id}\n\t};\n};\n    \n\nconst itemReducer=(state=[],action)=>{\n\tconsole.log('state now',state);\n\tconsole.log('action',action);\n\n\tswitch(action.type){\n\tcase 'TOGGLE_CLICKED':\n\t\tconst id=action.data.id;\n\t\tconst itemToToggle=state.find(item=>item.id===id);\n\t\tconst changedItem={\n\t\t\t...itemToToggle,\n\t\t\tclicked:!itemToToggle.clicked\n\t\t};\n\t\treturn state.map(item=>item.id!==id?item:changedItem);\n\n\tcase 'NEW_ITEM':\n\t\treturn [...state,action.data];\n\tcase 'REMOVE_ITEM':\n\t\tconst removeId=action.data.id;\n\t\tconst removedItemList=state.filter(item=>item.id!==removeId);\n\t\treturn removedItemList;\n\tdefault:\n\t\treturn state;\n\n\t}\n};\nexport default itemReducer;\n\n    \n  ","/* eslint-disable react/prop-types */\nimport React,{useState} from 'react';\nimport {Button,Snackbar,Tooltip,Typography} from '@material-ui/core/';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport { useDispatch } from 'react-redux';\nimport {createItem} from '../reducers/itemReducer';\nimport '../App.css';\nconst ItemForm =(props)=>{\n\tconst dispatch=useDispatch();\n\tconst [warning, setWarning] = useState(false);\n\n\tconst handleClose = (event, reason) => {\n\t\tif (reason === 'clickaway') {\n\t\t\treturn;\n\t\t}\n    \n\t\tprops.setOpen(false);\n\t\tsetWarning(false);\n\t};\n\tconst addItem=(event)=>{\n\t\tevent.preventDefault();\n\t\tif(event.target.item.value===''){\n\t\t\tsetWarning(true);\n\t\t}else{\n\t\t\tconst content=event.target.item.value;\n\t\t\tdispatch(createItem(content));\n\t\t\tevent.target.item.value='';\n\n\t\t\tprops.setOpen(true);\n\n\t\t}};\n\treturn(\n\t\t<div className='form'>\n\t\t\t<h1 className=\"h1\">To-do list</h1> \n\t\t\t<form onSubmit={addItem}>\n\t\t\t\t<Typography gutterBottom>\n        Add items to your to-do list\n\t\t\t\t</Typography>\n\t\t\t\t<Tooltip title=\"write a new task here\">\n\t\t\t\t\t<input className=\"center-me\" name=\"item\"  />\n\t\t\t\t</Tooltip>\n\t\t\t\t<Button \n\t\t\t\t\ttype=\"submit\">\n        Submit\n\t\t\t\t</Button>\n\n\t\t\t\t<Snackbar\n\t\t\t\t\tanchorOrigin={{\n\t\t\t\t\t\tvertical: 'top',\n\t\t\t\t\t\thorizontal: 'center'\n\t\t\t\t\t}} \n\t\t\t\t\topen={props.open}\n\t\t\t\t\tautoHideDuration={3000} \n\t\t\t\t\tonClose={handleClose}>\n\t\t\t\t\t<Alert \n\t\t\t\t\t\tonClose={props.handleClose} \n\t\t\t\t\t\tseverity=\"success\">\n         New item added to the list!\n\t\t\t\t\t</Alert>\n\t\t\t\t</Snackbar>\n\n\t\t\t\t<Snackbar\n\t\t\t\t\tanchorOrigin={{\n\t\t\t\t\t\tvertical: 'top',\n\t\t\t\t\t\thorizontal: 'center'\n\t\t\t\t\t}} \n\t\t\t\t\topen={warning}\n\t\t\t\t\tautoHideDuration={3000}\n\t\t\t\t\tonClose={handleClose}>\n\t\t\t\t\t<Alert \n\t\t\t\t\t\tseverity=\"warning\" >\n\t\t\t\t\t\t<AlertTitle>No input detected</AlertTitle>\n\t\t\t\t\t</Alert>\n\t\t\t\t</Snackbar>\n\n\t\t\t</form>\n\t\t</div>\n\t);\n};\nexport default ItemForm;","/* eslint-disable react/prop-types */\nimport React,{useState} from 'react';\nimport DoneIcon from '@material-ui/icons/Done';\nimport {Snackbar,Chip,Tooltip} from '@material-ui/core/';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport {useDispatch,useSelector} from 'react-redux';\nimport { toggleClicked,removeItem } from '../reducers/itemReducer';\nconst ItemList=()=>{\n\tconst [remove,setRemove]=useState(false);\n\tconst items = useSelector(state => state);\n\tconsole.log('items:',items);\n\tconst dispatch = useDispatch(); \n\n\n\tconst handleClick = id=> {\n\t\tdispatch(toggleClicked(id));\n\n\t};\n    \n\tconst handleDelete = id => {\n\t\tdispatch(removeItem(id));\n\t\tsetRemove(true);\n\t};\n\tconst handleClose = (event, reason) => {\n\t\tif (reason === 'clickaway') {\n\t\t\treturn;\n\t\t}\n\t\tsetRemove(false);\n\t};\n\n\treturn(\n\t\t<div className={items.length>0?'box':''}>\n\t\t\t{items.map(item=>\n\t\t\t\t<ul key={item.id}>\n\t\t\t\t\t<Tooltip\n\t\t\t\t\t\ttitle=\"click to mark as done\">\n\t\t\t\t\t\t<Chip variant='outlined' \n\t\t\t\t\t\t\tstyle={item.clicked?{borderColor:'green'}:null}\n\t\t\t\t\t\t\tkey={item.id} label={item.content}\n\t\t\t\t\t\t\ticon={item.clicked?<DoneIcon/>:null}\n\t\t\t\t\t\t\tonClick={()=>handleClick(item.id)} \n\t\t\t\t\t\t\tonDelete={()=>handleDelete(item.id)}/> \n\t\t\t\t\t</Tooltip>\n\t\t\t\t</ul>\n\t\t\t)}\n\t\t\t<Snackbar\n\t\t\t\tanchorOrigin={{\n\t\t\t\t\tvertical: 'top',\n\t\t\t\t\thorizontal: 'center'\n\t\t\t\t}}\n\t\t\t\topen={remove}\n\t\t\t\tautoHideDuration={3000}\n\t\t\t\tonClose={handleClose}>\n\t\t\t\t<Alert\n\t\t\t\t\tseverity=\"error\" >\n\t\t\t\t\t<AlertTitle>Item deleted</AlertTitle>\n\t\t\t\t</Alert>\n\t\t\t</Snackbar>\n\t\t</div>\n\t);\n};\n\nexport default ItemList;","import React,{useState} from 'react';\nimport './App.css';\nimport ItemForm from './components/ItemForm';\nimport ItemList from './components/ItemList';\n\nconst App=()=>{\n\tconst [open, setOpen] = useState(false);\n\n \n\treturn(\n\t\t<div  className=\"App\">\t\n\t\t\t<div >\n\t\t\t\t<ItemForm setOpen={setOpen} open={open} />\n\t\t\t\t<ItemList/>\n\t\t\t</div>\n\t\t</div>\n\n\t);\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport itemReducer from './reducers/itemReducer';\nconst store=createStore(itemReducer);\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>\n\t,\n\tdocument.getElementById('root')\n);\n\n"],"sourceRoot":""}